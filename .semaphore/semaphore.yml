version: v1.0
name: Semaphore Python / Django Example Pipeline
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
  - name: Install Dependencies
    task:
      jobs:
        - name: pip
          commands:
            - checkout
            - cd webApp/app
            - cache restore
            - pip download --cache-dir .pip_cache -r requirements.txt
            - cache store
            - sudo apt-get install -y tree
            - tree .pip_cache
      prologue:
        commands:
          - sem-version python 3.9
          - sem-version python 3.9
          - sudo apt-get update && sudo apt-get install -y python3-dev && sudo apt-get install default-libmysqlclient-dev
  - name: Run Code Analysis
    task:
      prologue:
        commands:
          - sem-version python 3.9
          - checkout
          - cd webApp/app
          - cache restore
          - pip install -r requirements.txt --cache-dir .pip_cache
      jobs:
        - name: Pylint
          commands: []
  - name: Run Unit Tests
    task:
      prologue:
        commands:
          - sem-version python 3.9
          - sem-service start mysql
          - checkout
          - cd webApp/app
          - cache restore
          - pip install -r requirements.txt --cache-dir .pip_cache
          - sh scripts/correct_markdown.sh
      jobs:
        - name: Test
          commands:
            - python manage.py test
  - name: Run Browser Tests
    task:
      env_vars:
        - name: DB_NAME
          value: pydjango
      prologue:
        commands:
          - sem-version python 3.9
          - sem-service start mysql
          - sudo apt-get install -y -qq mysql-client
          - mysql --host=0.0.0.0 -uroot -e "create database $DB_NAME"
          - checkout
          - cache restore
          - pip install -r requirements.txt --cache-dir .pip_cache
          - nohup python manage.py runserver &
      jobs:
        - name: Browser Test
          commands: []
  - name: Run Security Tests
    task:
      jobs:
        - name: Deployment Checklist
          commands:
            - checkout
            - cd webApp/app
            - sem-version python 3.9
            - cache restore
            - pip install -r requirements.txt --cache-dir .pip_cache
            - python manage.py check --deploy --fail-level ERROR
